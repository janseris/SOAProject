{
  "openapi": "3.0.1",
  "info": {
    "title": "Microservices.IoT.ManagementConsole.RestAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/EventManagement": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Returns all events for a fridge fridgeID (past and present)",
        "operationId": "GetAllEvents",
        "parameters": [
          {
            "name": "fridgeID",
            "in": "query",
            "description": "Documentation for fridgeID parameter",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Deletes all events for fridge fridgeID",
        "operationId": "DeleteEvents",
        "parameters": [
          {
            "name": "fridgeID",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EventManagement/{id}": {
      "delete": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Deletes event ID",
        "operationId": "DeleteEventByID",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EventTypes": {
      "get": {
        "tags": [
          "EventTypes"
        ],
        "summary": "Gets a list of event types which can be used to create a new event.",
        "operationId": "GetEventTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FoodItemsManagement/{ID}": {
      "get": {
        "tags": [
          "FoodItemsManagement"
        ],
        "summary": "Gets a particular food item info by ID.",
        "operationId": "GetFoodItem",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FoodItemsManagement"
        ],
        "summary": "Deletes a food item from the system.\r\n<br>The food item could have been placed in a fridge but could be in the repository.</br>",
        "operationId": "DeleteFoodItem",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "FoodItemsManagement"
        ],
        "summary": "Updates a food item's Microservices.IoT.API.Models.FoodItems.Food.ExpirationDate to help simulate expired items in the system",
        "operationId": "ChangeExpirationDate",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FoodItemsManagement": {
      "get": {
        "tags": [
          "FoodItemsManagement"
        ],
        "summary": "Retrieves all food items available in the food repository.\r\n<br>Food items placed in fridges are not returned.</br>",
        "operationId": "GetAllFoodItems",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FoodItemsManagement"
        ],
        "summary": "Creates a new food item and places it in the food repository.\r\n<br>This food item can then be placed into a fridge.</br>",
        "operationId": "InsertFoodItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FoodCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/FoodItemsManagement/{ID}/duplicate": {
      "post": {
        "tags": [
          "FoodItemsManagement"
        ],
        "summary": "Creates a copy of a food item with full stats and places it in the food repository.)\"/>",
        "operationId": "DuplicateFoodItem",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/FoodItemsSimulation/{id}/open": {
      "patch": {
        "tags": [
          "FoodItemsSimulation"
        ],
        "summary": "Opens the food item's packaging.\r\n<br>Does nothing if the food packaging is already open.</br>",
        "operationId": "OpenFoodItemPackage",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FoodItemsSimulation/{id}": {
      "post": {
        "tags": [
          "FoodItemsSimulation"
        ],
        "summary": "Simulates consuming of a part of a food item.\r\n<br>Decreases the weight of a particular food item by percentage amountPercent.</br><br>A food item has initial weight and current weight in grams.</br><br>If the weight reaches 0, the food item disappears (is deleted).</br><br>Opens the food item's package if this is first consumption</br>",
        "operationId": "ConsumeFoodItem",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "food ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amountPercent",
            "in": "query",
            "description": "must be between 1 and 100",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "If amountPercent is not a number between 1 and 100"
          }
        }
      }
    },
    "/api/FoodType": {
      "get": {
        "tags": [
          "FoodType"
        ],
        "summary": "Gets all food item types available in the system.\r\n<br>Used to select a type when creating a food item in the UI.</br>",
        "operationId": "GetAllFoodTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FoodType"
        ],
        "summary": "Adds a new food item type to be available in the system.",
        "operationId": "InsertFoodType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodTypeCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodTypeCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FoodTypeCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/FoodType/healthRatings": {
      "get": {
        "tags": [
          "FoodType"
        ],
        "summary": "Health rating is metadata for each food type which can be used for calculating statistics about food stored in a fridge.",
        "operationId": "GetAllFoodHealthRatingTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodHealthRating"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodHealthRating"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoodHealthRating"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FoodType/{ID}": {
      "put": {
        "tags": [
          "FoodType"
        ],
        "summary": "Updates/replaces food type ID definition with new definition.",
        "operationId": "ReplaceFoodType",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodTypeUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodTypeUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FoodTypeUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgeSensorsManagement/{name}": {
      "get": {
        "tags": [
          "FridgeSensorsManagement"
        ],
        "summary": "= microservice process for this fridge is running",
        "operationId": "IsSensorMicroserviceRunning",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgeSensorsManagement/{name}/port": {
      "get": {
        "tags": [
          "FridgeSensorsManagement"
        ],
        "summary": "Returns the port on which a sensor microservice process is running if it is tracked\r\n<br>`null` if the service is not running (or is no tracked)</br>",
        "operationId": "GetRunningSensorMicroservicePort",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgeSensorsManagement/{name}/start": {
      "post": {
        "tags": [
          "FridgeSensorsManagement"
        ],
        "summary": "Starts a new instance of a microservice with a given name to listen on port port and adds it to name service-",
        "operationId": "StartSensorMicroservice",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "showWindow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If a service for name was sucessfully started"
          },
          "409": {
            "description": "If a service for name is already running or if port is already occupied",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "If a service for name fails to start",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgeSensorsManagement/{name}/stop": {
      "post": {
        "tags": [
          "FridgeSensorsManagement"
        ],
        "summary": "Stops a sensor microservice running for defined name",
        "operationId": "StopSensorMicroservice",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgeSensorsManagement/sensorProcessExecutablePath": {
      "put": {
        "tags": [
          "FridgeSensorsManagement"
        ],
        "summary": "Sets path to a file which will be executed as a fridge sensor microservice.",
        "operationId": "SetSensorProcessExecutablePath",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "FridgeSensorsManagement"
        ],
        "summary": "Gets the path to the executable which is used as a fridge sensor microservice process.",
        "operationId": "GetSensorProcessExecutablePath",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgeSimulation/{ID}/openDoor": {
      "put": {
        "tags": [
          "FridgeSimulation"
        ],
        "summary": "Sets open flag to true and starts a new event of type \"Door open\", this can generate a new event \"Door open period exceeded\" event if the fridge is open for too long",
        "operationId": "OpenFridgeDoor",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgeSimulation/{ID}/closeDoor": {
      "put": {
        "tags": [
          "FridgeSimulation"
        ],
        "summary": "Sets fridge's open flag to false.\r\n<br>If there is an active \"Door open period exceeded\" event active, it is stopped.</br>",
        "operationId": "CloseFridgeDoor",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgeSimulation/{ID}/food": {
      "post": {
        "tags": [
          "FridgeSimulation"
        ],
        "summary": "Assigns food objects with foodIDs to the fridge\r\n<br>A food item can belong to at most one fridge</br><br>Only food items which do not already belong in a fridge can be placed in this fridge (these from food repository).</br>",
        "operationId": "AssignFoodItemsToFridge",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgeSimulation/{ID}/temperature": {
      "put": {
        "tags": [
          "FridgeSimulation"
        ],
        "summary": "Changes fridge's current temperature. \r\n<br>This is a simulation which can be then observed on sensors.</br>",
        "operationId": "SetFridgeCurrentTemperature",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "fridge",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "degrees",
            "in": "query",
            "description": "new value",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgeSimulation/{ID}/powerConsumption": {
      "put": {
        "tags": [
          "FridgeSimulation"
        ],
        "summary": "Changes fridge's current power consumption. \r\n<br>This is a simulation which can be then observed on sensors.</br>",
        "operationId": "SetFridgeCurrentPowerConsumption",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "fridge",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "powerConsumption",
            "in": "query",
            "description": "new value",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgesManagement/{ID}": {
      "get": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Retrieves all info about a fridge",
        "operationId": "GetFridge",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fridge"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Deletes a fridge from the system",
        "operationId": "DeleteFridge",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgesManagement": {
      "get": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Retrieves infos about all fridges",
        "operationId": "GetAllFridges",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fridge"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fridge"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fridge"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Creates a new fridge in the system",
        "operationId": "InsertFridge",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FridgeCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FridgeCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FridgeCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgesManagement/fridgeTypes": {
      "get": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Used to fill a combobox when creating a new fridge in the management UI",
        "operationId": "GetFridgeTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FridgeType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FridgeType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FridgeType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FridgesManagement/{ID}/doorOpenWarningPeriodSeconds": {
      "put": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Used to configure an existing fridge via the management UI",
        "operationId": "SetFridgeDoorOpenWarningPeriodSeconds",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "seconds",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgesManagement/{ID}/offsetDegreesForTemperatureWarning": {
      "put": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Used to configure an existing fridge via the management UI",
        "operationId": "SetFridgeOffsetDegreesForTemperatureWarning",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "degrees",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgesManagement/{ID}/operatingTemperature": {
      "put": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Used to configure an existing fridge via the management UI",
        "operationId": "SetFridgeOperatingTemperature",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "degrees",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FridgesManagement/{ID}/staticInfo": {
      "put": {
        "tags": [
          "FridgesManagement"
        ],
        "summary": "Overwrites fridge's static info with new values",
        "operationId": "SetFridgeStaticInfo",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FridgeStaticInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FridgeStaticInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FridgeStaticInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Food": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "producer": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/FoodType"
          },
          "open": {
            "type": "boolean"
          },
          "initialWeightGrams": {
            "type": "integer",
            "format": "int32"
          },
          "currentWeightGrams": {
            "type": "integer",
            "format": "int32"
          },
          "hasImmutableVolume": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "expired": {
            "type": "boolean",
            "readOnly": true
          },
          "currentVolumeLiters": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FoodCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "producer": {
            "type": "string",
            "nullable": true
          },
          "typeID": {
            "type": "integer",
            "format": "int32"
          },
          "open": {
            "type": "boolean"
          },
          "weightGrams": {
            "type": "integer",
            "format": "int32"
          },
          "immutableVolume": {
            "type": "boolean"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FoodHealthRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FoodType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "density": {
            "type": "number",
            "format": "double"
          },
          "immutableVolumeHint": {
            "type": "boolean"
          },
          "healthRating": {
            "$ref": "#/components/schemas/FoodHealthRating"
          }
        },
        "additionalProperties": false
      },
      "FoodTypeCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "density": {
            "type": "number",
            "format": "double"
          },
          "immutableVolumeHint": {
            "type": "boolean"
          },
          "healthRatingID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FoodTypeUpdateDTO": {
        "type": "object",
        "properties": {
          "density": {
            "type": "number",
            "format": "double"
          },
          "healthRatingID": {
            "type": "integer",
            "format": "int32"
          },
          "immutableVolumeHint": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Fridge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/FridgeType"
          },
          "food": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Food"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "nullable": true
          },
          "info": {
            "$ref": "#/components/schemas/FridgeInfo"
          },
          "occupiedVolumeLiters": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "occupiedVolumePercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "freeVolumePercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "freeVolumeLiters": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FridgeConfigurableInfo": {
        "type": "object",
        "properties": {
          "configuredOperatingTemperatureDegrees": {
            "type": "number",
            "format": "double"
          },
          "doorOpenPeriodSecondsForWarning": {
            "type": "integer",
            "format": "int32"
          },
          "degreesOffsetForTemperatureWarning": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FridgeCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "typeID": {
            "type": "integer",
            "format": "int32"
          },
          "designedMaximalPowerConsumptionWatts": {
            "type": "integer",
            "format": "int32"
          },
          "capacityLiters": {
            "type": "integer",
            "format": "int32"
          },
          "configuredOperatingTemperatureDegrees": {
            "type": "number",
            "format": "double"
          },
          "doorOpenPeriodSecondsForWarning": {
            "type": "integer",
            "format": "int32"
          },
          "degreesOffsetForTemperatureWarning": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FridgeInfo": {
        "type": "object",
        "properties": {
          "static": {
            "$ref": "#/components/schemas/FridgeStaticInfo"
          },
          "configurable": {
            "$ref": "#/components/schemas/FridgeConfigurableInfo"
          },
          "sensors": {
            "$ref": "#/components/schemas/FridgeSensorInfo"
          }
        },
        "additionalProperties": false
      },
      "FridgeSensorInfo": {
        "type": "object",
        "properties": {
          "temperatureDegrees": {
            "type": "number",
            "format": "double"
          },
          "powerConsumptionWatts": {
            "type": "integer",
            "format": "int32"
          },
          "isOpen": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FridgeStaticInfo": {
        "type": "object",
        "properties": {
          "designedMaximalPowerConsumptionWatts": {
            "type": "integer",
            "format": "int32"
          },
          "capacityLiters": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FridgeType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}